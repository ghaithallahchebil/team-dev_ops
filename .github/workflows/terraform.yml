# .github/workflows/terraform.yml
name: 'Terraform'
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      env:
        TF_VAR_ssh_public_key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        
    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      working-directory: ./terraform
      run: terraform plan
      env:
        TF_VAR_ssh_public_key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        
    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      working-directory: ./terraform
      run: terraform apply -auto-approve
      env:
        TF_VAR_ssh_public_key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve
      env:
        TF_VAR_ssh_public_key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}

    - name: Get EC2 IP
      if: github.event.inputs.action == 'apply'
      id: get_ip
      working-directory: ./terraform
      run: |
        echo "EC2_IP=$(terraform output -raw public_ip)" >> $GITHUB_ENV

    - name: Update GitHub Secret
      if: github.event.inputs.action == 'apply'
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.actions.createOrUpdateRepoSecret({
            owner: context.repo.owner,
            repo: context.repo.repo,
            secret_name: 'SERVER_IP',
            encrypted_value: process.env.EC2_IP
          })